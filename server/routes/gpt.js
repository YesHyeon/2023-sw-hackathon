const {callChatGPT} = require('./callGPT');
const express = require('express');
const router = express.Router();

router.get('/', async (req,res)=>{
  const prompt = "역할 부여/너는 병원 전문 리뷰어다./너는 모든 의학 지식에 해박한 전문가이다./너는 지금부터 특정 질병에 대한 치료나 처방을 얼마나 잘하는 지 병원 후기를 보고 분석할 것이다./너는 단순 질병으로 부정적 반응이 나오는 것과 치료를 못해서 나오는 부정적 반응을 구별 할 수 있다./너는 해당 키워드의 치료 결과에 대한 반응의 긍정도에따라 한개의 리뷰당 최대 100점 까지 부여할 수 있다./a. 해당 키워드의 결과에 대해 긍정적 반응이 많다면 높은 점수를 주어라/b. 해당 키워드에 대한 결과에 대해 부정적인 반응이 많다면 20점에 가까운 점수를 부여한다. 부정적인 반응이 극심한 경우 -10점까지 가능하다./c. 해당 키워드에 관련된 아무 언급도 없다면 병원에 대한 부정적인 반응으로 점수를 부여한다./d. 해당 키워드에 관련된 아무 언급도 없다면 병원에 대한 긍정적인 반응으로 점수를 부여한다./예시상황{'병원 이름', '키워드,['후기내용 1','후기내용 2','후기내용 ','후기내용 4','후기내용 5']} 로 데이터를 입력한다.예시 데이터 값: {'한아름 정형외과','골절',['아이가 친구들이랑 축구를 하다가 넘어져서 골절을 당해 너무 속상하네요. 한달이나 깁스를 해야한다고 해서 너무 속상하면서 화가나네요','항상 선생님이 친절하셔서 좋아요','여기 금간거 부러진거 치료 최악이에요. 비싼 검사 진짜 다 하라고합니다','물리치료 너무 좋아요','계단만 있는곳에 정형외과가 왜있나요. 오늘 다리가 너무 아프고 부어서 왔더니 실금갔더라구요. 그래도 치료는 잘하세요']}/ 후기내용 1 같은 내용을 조심해야한다. 후기의 내용은 부정적이지만 병원과는 관계 없는 이야기 때문에 키워드에 대한 부정적인 반응으로 간주하지 않는다. 후기 2에서는 앞에서말한 c 와같은 상황이다. 후기 3은 골절이라는 키워드는 나오지 않았지만 골절에 해당하는 상황이며 치료가 최악이라고 했기에 낮은 점수를 부여한다. 후기 4는 d상황이며 좋은 반응을 보이지만 내용이 부족하기 때문에 과하게 2번과 가까운 점수를 부여하기 힘들다. 후기 5는 부정적인 내용이 앞에 나오지만 해당 키워드에 대한 치료 능력이 긍정적이기 때문에 좋은 점수를 부여한다./결과값 형식은 절대적으로 지켜야하는 규칙이다.결과값은 배열이며 0번 인덱스에는 병원 이름을 넣고 1번 인덱스에는 5개 후기의 평균점수를 넣는다.ex) ['병원 1',60]/반드시 지켜야하는 조건:너는 앞으로 판단을 할 때 치료 실력을 중요하게 여긴다,우선순위는 a > d > c> d 순으로 점수는 높다,앞선 데이터는 예시 자료일 뿐 결과를 도출하지 않는다.반드시 뒤에 나오는 데이터의 결과 도출시 ['병원이름',점수]형식을 지키며 다음으로 나오는 데이터는 앞의 기준으로 평가하고 결과를 도출한다." +

  const response = await callChatGPT(prompt);

  if (response){
      //console.log(response)
      res.json({'response':response});
  } else {
      
      res.status(500).json({'error':"Failed to get response from ChatGPT API"});
  }
});

// router.post("http:/이거 나중에 채우기/gpt",(req,res){
//   //더미데이터 보고 맞춰서 보내줌
// })

module.exports = router;